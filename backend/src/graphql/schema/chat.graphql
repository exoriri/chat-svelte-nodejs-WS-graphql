type Message {
    id: ID!,
    user: User,
    chat_id: ID!,
    content: String!,
    created_at: String
}

type Chat {
    id: ID!,
    user: User!, 
    messages: [Message]
}

type ChatsResult {
    result: [Chat]
}

union ChatsMessagesResult = Chat | Error
union AllChatsResult = ChatsResult | Error
union SentMessageResult = Message | Error

type Query {
    chat(chat_id: ID!): ChatsMessagesResult
    chats: AllChatsResult
}

type Mutation {
    sendMessage(chat_id: ID!, content: String): SentMessageResult
}

type Subscription {
    newMessage(chat_id: ID!): SentMessageResult
}